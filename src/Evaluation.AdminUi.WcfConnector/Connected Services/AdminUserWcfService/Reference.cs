//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminUserWcfService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddUserRequest", Namespace="http://schemas.datacontract.org/2004/07/AdminAuthentication.Wcf.DTO")]
    public partial class AddUserRequest : object
    {
        
        private string EmailField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddUserResponse", Namespace="http://schemas.datacontract.org/2004/07/AdminAuthentication.Wcf.DTO")]
    public partial class AddUserResponse : object
    {
        
        private System.Net.HttpStatusCode HttpStatusCodeField;
        
        private string ResponseMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Net.HttpStatusCode HttpStatusCode
        {
            get
            {
                return this.HttpStatusCodeField;
            }
            set
            {
                this.HttpStatusCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseMessage
        {
            get
            {
                return this.ResponseMessageField;
            }
            set
            {
                this.ResponseMessageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddUserInvalidFieldFault", Namespace="http://schemas.datacontract.org/2004/07/AdminAuthentication.Wcf.DTO")]
    public partial class AddUserInvalidFieldFault : object
    {
        
        private string DescriptionField;
        
        private System.Net.HttpStatusCode HttpStatusCodeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Net.HttpStatusCode HttpStatusCode
        {
            get
            {
                return this.HttpStatusCodeField;
            }
            set
            {
                this.HttpStatusCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminUserWcfService.IAdminUserService")]
    public interface IAdminUserService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminUserService/AddUser", ReplyAction="http://tempuri.org/IAdminUserService/AddUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AdminUserWcfService.AddUserInvalidFieldFault), Action="http://tempuri.org/IAdminUserService/AddUserAddUserInvalidFieldFaultFault", Name="AddUserInvalidFieldFault", Namespace="http://schemas.datacontract.org/2004/07/AdminAuthentication.Wcf.DTO")]
        System.Threading.Tasks.Task<AdminUserWcfService.AddUserResponse> AddUserAsync(AdminUserWcfService.AddUserRequest addUserRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IAdminUserServiceChannel : AdminUserWcfService.IAdminUserService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class AdminUserServiceClient : System.ServiceModel.ClientBase<AdminUserWcfService.IAdminUserService>, AdminUserWcfService.IAdminUserService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AdminUserServiceClient() : 
                base(AdminUserServiceClient.GetDefaultBinding(), AdminUserServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IAdminUserService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminUserServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AdminUserServiceClient.GetBindingForEndpoint(endpointConfiguration), AdminUserServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminUserServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AdminUserServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminUserServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AdminUserServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminUserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<AdminUserWcfService.AddUserResponse> AddUserAsync(AdminUserWcfService.AddUserRequest addUserRequest)
        {
            return base.Channel.AddUserAsync(addUserRequest);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAdminUserService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAdminUserService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:19333/AdminUserService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return AdminUserServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IAdminUserService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return AdminUserServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IAdminUserService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IAdminUserService,
        }
    }
}
